package uo.ri.cws.domain;

import java.util.Objects;

import uo.ri.util.assertion.ArgumentChecks;

public class Client {
	// Atributos naturales
	private String dni; // Identidad natural
	private String name;
	private String surname;
	private String email;
	private String phone;
	private Address address;
	
	public Client(String dni, String nombre, String apellidos) {
		// validacion
		ArgumentChecks.isNotEmpty(dni, "CLIENT: invalid dni");
		ArgumentChecks.isNotBlank(dni, "CLIENT: invalid dni");	
		ArgumentChecks.isNotEmpty(nombre, "CLIENT: invalid nombre");
		ArgumentChecks.isNotBlank(nombre, "CLIENT: invalid nombre");
		ArgumentChecks.isNotEmpty(apellidos, "CLIENT: invalid apellidos");
		ArgumentChecks.isNotBlank(apellidos, "CLIENT: invalid apellidos");		
	}
	
	public String getDni() {
		return dni;
	}
	public String getName() {
		return name;
	}
	public String getSurname() {
		return surname;
	}
	public String getEmail() {
		return email;
	}
	public String getPhone() {
		return phone;
	}
	public Address getAddress() {
		return address;
	}
	@Override
	public int hashCode() {
		return Objects.hash(dni);
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Client other = (Client) obj;
		return Objects.equals(dni, other.dni);
	}
	@Override
	public String toString() {
		return "Client [dni=" + dni + ", name=" + name + ", surname=" + surname + ", email=" + email + ", phone="
				+ phone + ", address=" + address + "]";
	}

	
	
}

