package uo.ri.cws.domain;

import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import uo.ri.util.assertion.ArgumentChecks;

public class Intervention {
	// natural attributes
	private LocalDateTime date;
	private int minutes;

	// accidental attributes
	private WorkOrder workOrder;
	private Mechanic mechanic;
	private Set<Substitution> substitutions = new HashSet<>();

	public Intervention(Mechanic m, WorkOrder wo, int i) {
		ArgumentChecks.isTrue(i > 0);
		ArgumentChecks.isNotNull(m, "INTERVENTION: mechanic invalid");
		ArgumentChecks.isNotNull(wo, "INTERVENTION: workorder invalid");
		
		this.mechanic = m;
		this.workOrder = wo;
		this.minutes = i;
	}

	void _setWorkOrder(WorkOrder workOrder) {
		this.workOrder = workOrder;
	}

	public LocalDateTime getDate() {
		return date;
	}

	public int getMinutes() {
		return minutes;
	}

	public WorkOrder getWorkOrder() {
		return workOrder;
	}

	public Mechanic getMechanic() {
		return mechanic;
	}

	void _setMechanic(Mechanic mechanic) {
		this.mechanic = mechanic;
	}

	public Set<Substitution> getSubstitutions() {
		return new HashSet<>( substitutions );
	}

	Set<Substitution> _getSubstitutions() {
		return substitutions;
	}
	
	@Override
	public String toString() {
		return "Intervention [date=" + date + ", minutes=" + minutes + ","
				+ " substitutions=" + substitutions + "]";
	}

}
