<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
        http://xmlns.jcp.org/xml/ns/persistence/orm_2_2.xsd" version="2.2">

	<!-- Vehicle queries --> 
	<named-query name="Vehicle.findByPlate">
		<query>select v from Vehicle v where v.plateNumber = ?1</query>
	</named-query>

	<!-- WorkOrder queries --> 
	<named-query name="WorkOrder.findByIds">
		<query>select a from WorkOrder a where a.id in ?1</query>
	</named-query>

	<!-- PaymentMean queries -->
	<named-query name="PaymentMean.findByInvoiceId">
		<query>
			select m 
			from Invoice f 
				join f.workOrders w 
				join w.vehicle.client c 
				join c.payments m 
			where f.id = ?1
		</query>
	</named-query>
	
	<!-- Payroll queries -->
	<named-query name="Payroll.getCurrentMonthPayrolls">
        <query>
            select p
            from Payroll p
            where EXTRACT(MONTH from p.date) = ?1 and EXTRACT(YEAR from p.date) = ?2
        </query>
    </named-query>
	<named-query name="Payroll.getPayrollByMechanicId">
        <query>
            select p
            from Payroll p
            where p.contract.mechanic.id = ?1
        </query>
    </named-query>
    <named-query name="Payroll.getPayrollByProfessionalGroup">
        <query>
            select p
            from Payroll p
            where p.contract.professionalGroup.name = ?1
        </query>
    </named-query>
	
	<!-- ProfessionalGroup queries -->
	<named-query name="ProfessionalGroup.findByName">
		<query>
			select pg
			from ProfessionalGroup pg
			where pg.name = ?1
		</query>
	</named-query>
	
	<!-- Contract queries -->
	<!--<named-query name="Contract.findContractsForPayrolls">
		<query>
			select c 
			from Contract c
			where c.state = uo.ri.cws.domain.Contract.ContractState.IN_FORCE
			or (c.state = uo.ri.cws.domain.Contract.ContractState.TERMINATED and 
			YEAR(c.endDate) = YEAR(?1) and 
			MONTH(c.endDate) >= MONTH(?1))
		</query>
	</named-query>-->
	<!--<named-query name="Contract.findContractsForPayrolls">
		<query>
			select c 
			from Contract c
			where c.state = uo.ri.cws.domain.Contract.ContractState.IN_FORCE
			or (c.state = uo.ri.cws.domain.Contract.ContractState.TERMINATED)
		</query>
	</named-query>-->
	
	<!-- ContractType queries -->
	<named-query name="ContractType.findByName">
		<query>
			select c 
			from ContractType c
			where c.name = ?1
		</query>
	</named-query>
	
	<!-- Mechanic queries -->
	<named-query name="Mechanic.findByDni">
		<query>
			select m 
			from Mechanic m 
			where m.dni = ?1
		</query>
	</named-query>
	<named-query name="Mechanic.findAll">
		<query>
			select m 
			from Mechanic m
		</query>
	</named-query>
	<named-query name="Mechanic.findMechanicWithContractInforce">
		<query>
			select m
			from Contract c
				join c.mechanic m
			where c.state = uo.ri.cws.domain.Contract.ContractState.IN_FORCE
		</query>
	</named-query>
	<named-query name="Mechanic.findMechanicWithContracTypetInforce">
		<query>
			select c.mechanic
			from Contract c
			where c.state = uo.ri.cws.domain.Contract.ContractState.IN_FORCE and c.contracttype = ?1
		</query>
	</named-query>
	<named-query name="Mechanic.findMechanicInProfessionalGroup">
		<query>
			select c.mechanic
			from Contract c
			where c.professionalGroup = ?1
		</query>
	</named-query>

	<!-- Invoice queries -->
	<named-query name="Invoice.findByNumber">
		<query>select f from Invoice f where f.number = ?1</query>
	</named-query>
	
	<named-query name="Invoice.getNextInvoiceNumber">
		<query>select max(f.number) + 1 from Invoice f</query>
	</named-query>
	
<!-- 
	Use this format if your query has 
	numeric comparisons as the one in this example
	
	<named-query name="findItemsOnSaleByCategoryId">
		<query>
			<![CDATA[
			select i 
				from Item i join i.categories c
				where c.id = ?2
					and i.startDate <= ?1
					and i.endDate >= ?1 
			]]>
		</query>
	</named-query>
 -->		

</entity-mappings>